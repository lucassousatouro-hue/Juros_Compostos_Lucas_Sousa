# -*- coding: utf-8 -*-
"""CÃ³pia de Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13sEZsSYDALzM_c1EOZkdfz-jAv2UDNuI
"""

import streamlit as st
import pandas as pd

# TÃ­tulo e autoria
st.title("ðŸ’° Calculadora de Juros Compostos")
st.caption("Desenvolvido por **Lucas Sousa** ðŸ§ ðŸ’»")
st.write("Simule o crescimento do seu investimento mÃªs a mÃªs e veja como os juros compostos fazem seu dinheiro trabalhar por vocÃª!")

# Entradas do usuÃ¡rio
aporte_inicial = st.number_input("Aporte inicial (R$):", min_value=0.0, value=0.0)
aporte_mensal = st.number_input("Aporte mensal (R$):", min_value=0.0, value=0.0)
taxa = st.number_input("Rendimento mensal (%):", min_value=0.0, value=1.0)
meses = st.number_input("PerÃ­odo (em meses, 1 a 180):", min_value=1, max_value=180, value=12)

if st.button("Calcular"):
    saldo = aporte_inicial
    taxa_decimal = taxa / 100
    evolucao = []

    for mes in range(1, meses + 1):
        juros = saldo * taxa_decimal
        saldo += juros + aporte_mensal
        evolucao.append({
            "MÃªs": mes,
            "Aporte": aporte_mensal if mes > 1 or aporte_inicial == 0 else aporte_inicial,
            "Juros": round(juros, 2),
            "Saldo Total": round(saldo, 2)
        })

    df = pd.DataFrame(evolucao)

    # Exibe tabela
    st.subheader("ðŸ“Š EvoluÃ§Ã£o mÃªs a mÃªs")
    st.dataframe(df)

    # Exibe resultados finais
    total_aportes = aporte_inicial + (aporte_mensal * meses)
    total_juros = saldo - total_aportes

    st.subheader("ðŸ“ˆ Resultado final")
    st.write(f"**Total investido:** R$ {total_aportes:,.2f}")
    st.write(f"**Total de juros:** R$ {total_juros:,.2f}")
    st.write(f"**Valor final:** R$ {saldo:,.2f}")

    # GrÃ¡fico de crescimento
    st.subheader("ðŸ“ˆ GrÃ¡fico de Crescimento do Investimento")
    st.line_chart(df[["Saldo Total"]])

# RodapÃ©
st.markdown("---")
st.markdown("ðŸ’¡ *Aplicativo criado para fins educacionais por Lucas Sousa.*")